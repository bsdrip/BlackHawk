from django.shortcuts import render, redirect

from .forms import ScanConfigForm
from .tasks import run_scan
from .models import Scan
import json


def config(request):
    if request.method == 'POST':
        scan_config_form = ScanConfigForm(request.POST)
        if scan_config_form.is_valid():
            scan_config_form.save()

            run_scan.delay(
                scan_config_form.cleaned_data,
                scan_config_form.instance.id,
            )
            return redirect('dashboard')
        else:
            return render(
                request,
                'VulnerabilityScanner/config.html',
                {
                    'form': scan_config_form,
                },
            )
    scan_config_form = ScanConfigForm()
    return render(
        request,
        'VulnerabilityScanner/config.html',
        {
            'form': scan_config_form,
        },
    )


def update_title(request, scan_id):
    if request.method == "GET":
        return render(
            request,
            'VulnerabilityScanner/update_title.html',
            {
                'form': ScanConfigForm(instance=Scan.objects.get(id=scan_id)),
            },
        )
    else:
        scan = Scan.objects.get(id=scan_id)
        scan.scan_title = request.POST['scan_title']
        scan.save()
        return redirect('dashboard')


def delete_scan(request, scan_id):
    Scan.objects.get(id=scan_id).delete()
    return redirect('dashboard')


def dashboard(request):
    running_scans = Scan.objects.filter(is_running=True)
    completed_scans = Scan.objects.filter(is_running=False)

    for scan in completed_scans:
        scan.result_json = json.loads(scan.result_json)

    return render(
        request,
        'VulnerabilityScanner/dashboard.html',
        {
            'running_scans': running_scans,
            'completed_scans': completed_scans,
        },
    )


def recent_scans(request):
    completed_scans = Scan.objects.filter(is_running=False)

    for scan in completed_scans:
        scan.result_json = json.loads(scan.result_json)

    return render(
        request,
        'VulnerabilityScanner/recent_scans.html',
        {
            'completed_scans': completed_scans,
        },
    )


def scan_details(request, scan_id):
    scan = Scan.objects.get(id=scan_id)
    scan.result_json = json.loads(scan.result_json)

    return render(
        request,
        'VulnerabilityScanner/scan_details.html',
        {
            'scan': scan,
        },
    )
