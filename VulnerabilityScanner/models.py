from django.db import models
from django.core.validators import RegexValidator


class ScanConfig(models.Model):
    SCAN_TYPE_CHOICES = [
        ('T1', 'Cautious Scan'),
        ('T2', 'Normal Scan'),
        ('T4', 'Aggressive Scan'),
    ]
    scan_title = models.CharField(
        max_length=100,
        validators=[
            RegexValidator(r'^[a-zA-Z0-9_ ]+$'),
        ],
    )
    scan_type = models.CharField(
        max_length=2,
        choices=SCAN_TYPE_CHOICES,
        validators=[
            RegexValidator(r'^T[1-4]$'),
        ],
    )
    targets = models.CharField(
        max_length=100,
        validators=[
            RegexValidator(
                r'^((?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}\.?|\b(?:\d{1,3}\.){3}\d{1,3}(?:\/\d{1,2})?\b)(?:,|$))+$',
                message='Invalid value for targets. Input should be: <target1>[,<target2>,...], target can be IP (e.g., 127.0.0.1), domain (e.g., gnu.org), or network (e.g., 0.0.0.0/24)',
            ),
        ],
    )
    ports = models.CharField(
        max_length=100,
        validators=[
            RegexValidator(
                r'^([0-9]{1,5}(-[0-9]{1,5})?)([,]([0-9]{1,5}(-[0-9]{1,5})?))*$',
                message='Invalid value for ports. Input should be: <port1>[,<port2>,...], port can be single port (e.g., 80), or range (e.g., 1-1000)',
            ),
        ],
    )
    udp = models.BooleanField()
    date = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'config - {self.scan_title}-{self.date}'


class ScanResult(models.Model):
    configuration = models.OneToOneField(ScanConfig, on_delete=models.CASCADE)
    result_json = models.JSONField()

    def __str__(self):
        return f'result - {self.configuration.scan_title}-{self.configuration.date}'


class ScanStatus(models.Model):
    configuration = models.OneToOneField(ScanConfig, on_delete=models.CASCADE)
    is_running = models.BooleanField(default=True)

    def __str__(self):
        return f'status - {self.configuration.scan_title}-{self.configuration.date}'
